import os

env = SConscript('../godot_cpp/SConstruct')
env.Append(CPPPATH=['src'])
dest_dir = '../../src/bin/gozen/'

num_jobs = ARGUMENTS.get('jobs', 4)
platform = ARGUMENTS.get('platform', 'linux')


if platform == 'linux':
	env.Append(LIBS=['avcodec', 'avformat', 'avfilter', 'avdevice', 'avutil', 'swscale', 'swresample'])
elif platform == 'windows':
	# Building FFmpeg
	config_extra_args = ''
	if platform.system().lower() == 'linux':
		os.environ['PATH'] = '/opt/bin/' + os.environ['PATH']
		cross_prefix = 'x86_64-w64-mingw32-'
		config_extra_args = '--config-prefix=' + cross_prefix + ' --arch=x86_64 --target-os=mingw32'
	
	ffmpeg_bin_folder = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'ffmpeg_bin')
	os.makedir(ffmpeg_bin_folder, exist_ok=true)

	os.chdir('ffmpeg')
	os.system(f'./configure --prefix={ffmpeg_bin_folder} --enable-gpl --enable-shared {config_extra_args}')
	os.system(f'make -j {num_jobs}')
	os.system(f'make -j {num_jobs} install')
	os.chdir('..')

	if platform.system().lower() == 'linux':
		ffmpeg_dlls = os.path.join('ffmpeg_bin', 'bin', '*.dll')
		for file in glob.glob(ffmpeg_dlls):
			shutil.copy(file, dest_dir + 'ffmpeg_bin')
	
	env.Append(CPPPATH = ['ffmpeg-bin/include'])
	env.Append(LIBPATH = ['ffmpeg-bin/bin'])
	env.Append(LIBS = ['avcodec', 'avformat', 'avfilter', 'avdevice', 'avutil', 'swscale', 'swresample'])

	if platform.system().lower() == 'windows':
		env.Append(LIBS = ['avcodec.lib', 'avformat.lib', 'avfilter.lib', 'avdevice.lib', 'avutil.lib', 'swscale.lib', 'swresample.lib'])
elif paltform == 'darwin': # MacOs
	print("Use a real pc!")
	exit


src = Glob('src/*.cpp')
libpath = '{}libgozen{}{}'.format(dest_dir, env['suffix'], env['SHLIBSUFFIX'])
sharedlib = env.SharedLibrary(libpath, src)

Default(sharedlib)
